name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
        
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      run: cargo fmt -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Build release
      run: cargo build --release --verbose

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
        
    - name: Build binary
      run: cargo build --release
      
    - name: Test CLI basic functionality
      run: |
        echo '<div class="text-red-500 p-4 flex">test</div>' > test.html
        ./target/release/biome-tailwind-sorter --check test.html
        if [ $? -ne 1 ]; then echo "Expected exit code 1"; exit 1; fi
        
    - name: Test CLI write functionality
      run: |
        echo '<div class="text-red-500 p-4 flex">test</div>' > test.html
        ./target/release/biome-tailwind-sorter --write test.html
        if ! grep -q 'class="flex p-4 text-red-500"' test.html; then
          echo "Classes not sorted correctly"
          cat test.html
          exit 1
        fi
        
    - name: Test cursor preservation
      run: |
        echo '<div class="text-red-500 p-4 flex">test</div>' > test.html
        ./target/release/biome-tailwind-sorter --write --preserve-cursor --cursor-offset 20 test.html 2>&1 | grep "CURSOR_POSITION"

  npm-test:
    name: NPM Integration
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
        
    - name: Build Rust binary
      run: cargo build --release
      
    - name: Test npm package
      run: |
        npm pack --dry-run
        echo "Package contents:"
        npm pack --dry-run | grep -E '\.(rs|toml|md|json)$' || true