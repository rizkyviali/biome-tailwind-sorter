name: VS Code Extension

on:
  push:
    branches: [ master, main ]
    paths: 
      - 'vscode-extension/**'
      - '.github/workflows/vscode-extension.yml'
  pull_request:
    branches: [ master, main ]
    paths: 
      - 'vscode-extension/**'
  release:
    types: [published]

env:
  WORKING_DIRECTORY: ./vscode-extension

jobs:
  test:
    name: Test Extension
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
        
    - name: Install dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm ci
      
    - name: Compile extension
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm run compile
      
    - name: Lint
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm run lint
      
    - name: Run tests (Ubuntu)
      if: runner.os == 'Linux'
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: xvfb-run -a npm test
      
    - name: Run tests (Windows/macOS)
      if: runner.os != 'Linux'
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm test

  package:
    name: Package Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
        
    - name: Install dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm ci
      
    - name: Package extension
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm run package
      
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension
        path: vscode-extension/*.vsix
        retention-days: 30

  publish:
    name: Publish Extension
    runs-on: ubuntu-latest
    needs: package
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
        
    - name: Install dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm ci
      
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Update version in package.json
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version
        
    - name: Publish to VS Code Marketplace
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm run publish
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        
    - name: Publish to Open VSX Registry
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npx ovsx publish *.vsix
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}